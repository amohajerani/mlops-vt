name: deploy-model-training-pipeline

variables:
  - group: vtpoc-vg
  - ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
      # 'main' branch: PRD environment
      - template: ../../config-infra-prod.yml
  - ${{ if ne(variables['Build.SourceBranchName'], 'main') }}:
      # 'develop' or feature branches: DEV environment
      - template: ../../config-infra-dev.yml

trigger:
  branches:
    include:
    - dev
    - main
  paths:
    include:
    - 'mlops/*'
    - 'data-science/*'
schedules:
- cron: "0 1 * * 1"
  displayName: Weekly build
  branches:
    include:
    - main
  always: true

pool:
  vmImage: ubuntu-22.04

stages:
  - stage: DeployTrainingPipeline
    displayName: Deploy Training Pipeline
    jobs:
      - job: DeployTrainingPipeline
        timeoutInMinutes: 120
        steps:
          - checkout: self
            path: s/
          - template: ../templates/install-az-ext.yml
            parameters:
              ado_service_connection_aml_ws: ${{ variables.ado_service_connection_aml_ws }}
          - template: ../templates/install-requirements.yml
#          - template: ../templates/run-unit-tests.yml
          - template: ../templates/connect-to-workspace.yml
            parameters:
              ado_service_connection_aml_ws: ${{ variables.ado_service_connection_aml_ws }}
              subscriptionId: ${{ variables.subscriptionId }}
              resource_group: ${{ variables.resource_group }}
              aml_workspace: ${{ variables.aml_workspace }}
#          - template: ../templates/import-data.yml
#            parameters:
#              snowflake_account: $(SNOWFLAKE_ACCOUNT)
#              snowflake_user: $(SNOWFLAKE_USER)
#              snowflake_password: $(SNOWFLAKE_PASSWORD)
#              subscription_id: $(SUBSCRIPTION_ID)
          - template: ../templates/register-environment.yml
            parameters:
              environment_name: vt-train-env
              environment_description: "Training Environment for VT Pipeline"
              environment_path: data-science/environment/train-conda.yml
              build_type: conda
              ado_service_connection_aml_ws: ${{ variables.ado_service_connection_aml_ws }}
#          - template: ../templates/run-pipeline.yml
#            parameters:
#              experiment_name: vt-train-pipeline
#              data_name: train
#              environment_name: vt-train-env
#              compute_name: cpu-cluster
#              enable_monitoring: $(enable_monitoring)
#              table_name: "vtmonitoring"
          - template: ../templates/rai.yml
            parameters:
              ado_service_connection_aml_ws: ${{ variables.ado_service_connection_aml_ws }}
              subscriptionId: ${{ variables.subscriptionId }}
              resource_group: ${{ variables.resource_group }}
              aml_workspace: ${{ variables.aml_workspace }}
          - script: |
              echo $(Build.Reason) > trigger.txt
            displayName: 'Write git branch to file'
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Build.SourcesDirectory)'
              artifact: 'code'