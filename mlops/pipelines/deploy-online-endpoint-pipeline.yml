name: deploy-online-endpoint-pipeline

variables:
  - group: vtpoc-vg
  - ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
      # 'main' branch: PRD environment
      - template: ../../config-infra-prod.yml
  - ${{ if ne(variables['Build.SourceBranchName'], 'main') }}:
      # 'develop' or feature branches: DEV environment
      - template: ../../config-infra-dev.yml
  - name: endpoint_name
    value: vt-online-$(namespace)$(postfix)$(environment)

trigger: none

resources:
  pipelines:
  - pipeline: MyBuildPipeline
    source: build
    trigger: 
      branches:
      - main
      - dev

pool:
  vmImage: ubuntu-20.04

stages:
  - stage: DeployDev
    displayName: Create/Update Online Endpoint in Dev
    variables:
      - group: vtpoc-vg
      - template: ../../config-infra-dev.yml
      - name: endpoint_name
        value: vt-online-$(namespace)$(postfix)$(environment)
    jobs:
      - deployment: DeployOnlineEndpointDev
        environment: 'dev'
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                  path: s/
                - template: ../templates/connect-to-workspace.yml
                - template: ../templates/install-az-ext.yml
                - template: ../templates/install-requirements.yml
                - template: ../templates/create-online-endpoint.yml
                  parameters:
                    endpoint_name: "${{ variables.endpoint_name }}"
                    endpoint_description: "VT Online Endpoint"
                    auth_mode: "key"
                - template: ../templates/create-online-deployment.yml
                  parameters:
                    deployment_name: vt-online-dp
                    endpoint_name: "${{ variables.endpoint_name }}"
                    model_path: "vt-model@latest"
                    traffic_allocation: 100
                - template: ../templates/test-online-endpoint.yml
                  parameters:
                    endpoint_name: "${{ variables.endpoint_name }}"
                    sample_request: data/test-request.json
                - template: ../templates/store_model.yml
                - task: PublishPipelineArtifact@1
                  inputs:
                    targetPath: './models'
                    artifact: 'MyPipelineArtifact'
                    publishLocation: 'pipeline'

  - stage: PROD_Approval
    condition: and(succeeded('DeployDev'), eq(variables['Build.SourceBranchName'], 'main'))
    jobs:
      - job: waitForValidation
        displayName: Wait for external validation
        pool: server
        timeoutInMinutes: 4320 # job times out in 3 days
        steps:
          - task: ManualValidation@0
            timeoutInMinutes: 1440 # task times out in 1 day
            inputs:
              instructions: 'Please validate the PROD build configuration and resume'
              onTimeout: 'reject'


  - stage: DeployProd
    displayName: Create/Update Online Endpoint in Prod
    dependsOn: PROD_Approval
    variables:
      - group: vtpoc-vg
      - template: ../../config-infra-prod.yml
      - name: endpoint_name
        value: vt-online-$(namespace)$(postfix)$(environment)
    jobs:
      - deployment: DeployOnlineEndpointProd
        environment: 'prod'
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                  path: s/
                - task: DownloadPipelineArtifact@2
                  inputs:
                    artifact: 'MyPipelineArtifact'
                    path: './models'
                - template: ../templates/connect-to-workspace.yml
                - template: ../templates/install-az-ext.yml
                - template: ../templates/install-requirements.yml
                - template: ../templates/register-environment.yml
                  parameters:
                    environment_name: vt-train-env
                    environment_description: "Training and Deployment Environment for VT Pipeline"
                    environment_path: data-science/environment/train-conda.yml
                    build_type: conda
                - template: ../templates/register_model.yml
                  parameters:
                    model_path: './models/vt-model/vt-model'
                - template: ../templates/create-online-endpoint.yml
                  parameters:
                    endpoint_name: "${{ variables.endpoint_name }}"
                    endpoint_description: "VT Online Endpoint"
                    auth_mode: "key"
                - template: ../templates/create-online-deployment.yml
                  parameters:
                    deployment_name: vt-online-dp
                    endpoint_name: "${{ variables.endpoint_name }}"
                    model_path: "vt-model@latest"
                    traffic_allocation: 100
                - template: ../templates/test-online-endpoint.yml
                  parameters:
                    endpoint_name: "${{ variables.endpoint_name }}"
                    sample_request: data/test-request.json