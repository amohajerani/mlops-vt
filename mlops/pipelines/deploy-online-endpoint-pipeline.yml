name: deploy-online-endpoint-pipeline

variables:
  - group: vtpoc-vg

trigger: none

resources:
  pipelines:
  - pipeline: MyBuildPipeline
    source: build
    trigger: 
      branches:
      - main
      - dev
  repositories:
  - repository: vt-ml-templates
    type: git
    name: vt-ml-templates

pool:
  vmImage: ubuntu-20.04


stages:
  - stage: DeployDev
    displayName: Create/Update Online Endpoint in Dev
    variables:
      - group: vtpoc-vg
      - template: config-infra-dev.yml@vt-ml-templates
      - name: endpoint_name
        value: vt-online-$(namespace)$(postfix)$(environment)
    jobs:
      - job: DeployOnlineEndpointDev
        steps:
          - checkout: none
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'specific'
              project: 'vtpoc'
              pipeline: build
              runVersion: latest
              artifactName: 'code'
              targetPath: $(Pipeline.Workspace)/s
          - script: |
              echo "Contents of the s dir:"
              ls -la $(Pipeline.Workspace)/s
              branch=$(cat $(Pipeline.Workspace)/s/branch.txt)
              echo "##vso[task.setvariable variable=branch;isOutput=true]$branch"
              cd $(Pipeline.Workspace)/s/mlops/pipelines
            name: getBranch
            displayName: 'Change directory'
          - template: ../templates/connect-to-workspace.yml
            parameters:
              ado_service_connection_aml_ws: ${{ variables.ado_service_connection_aml_ws }}
              subscriptionId: ${{ variables.subscriptionId }}
              resource_group: ${{ variables.resource_group }}
              aml_workspace: ${{ variables.aml_workspace }}
#          - template: ../templates/install-az-ext.yml
#            parameters:
#              ado_service_connection_aml_ws: ${{ variables.ado_service_connection_aml_ws }}
#          - template: ../templates/install-requirements.yml
#          - template: ../templates/create-online-endpoint.yml
#            parameters:
#              endpoint_name: "${{ variables.endpoint_name }}"
#              endpoint_description: "VT Online Endpoint"
#              auth_mode: "key"
#              ado_service_connection_aml_ws: ${{ variables.ado_service_connection_aml_ws }}
#          - template: ../templates/create-online-deployment.yml
#            parameters:
#              deployment_name: vt-online-dp
#              endpoint_name: "${{ variables.endpoint_name }}"
#              model_path: "vt-model@latest"
#              traffic_allocation: 100
#              ado_service_connection_aml_ws: ${{ variables.ado_service_connection_aml_ws }}
#          - template: ../templates/test-online-endpoint.yml
#            parameters:
#              endpoint_name: "${{ variables.endpoint_name }}"
#              sample_request: 'data/test-request.json'
#              ado_service_connection_aml_ws: ${{ variables.ado_service_connection_aml_ws }}
#          - template: ../templates/store_model.yml
#            parameters:
#              ado_service_connection_aml_ws: ${{ variables.ado_service_connection_aml_ws }}
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Pipeline.Workspace)/s'
              artifact: 'code'
              publishLocation: 'pipeline'

  - stage: PROD_Approval
    dependsOn:
    - DeployDev
    variables:
    - name: branch
      value: $[ stageDependencies.DeployDev.DeployOnlineEndpointDev.outputs['getBranch.branch'] ]
    condition: eq(variables.branch, 'main')
    jobs:
      - job: confirmCondition
        steps:
          - script: |
              set -x
              echo "$(dependencies.DeployDev.result)"
              if [ "$(dependencies.DeployDev.result)" = "Succeeded" ]; then
                echo "DeployDev stage was successful"
              else
                echo "DeployDev stage failed"
              fi
      - job: waitForValidation
        displayName: Wait for external validation
        pool: server
        timeoutInMinutes: 4320 # job times out in 3 days
        steps:
          - task: ManualValidation@0
            timeoutInMinutes: 1440 # task times out in 1 day
            inputs:
              instructions: 'Please validate the PROD build configuration and resume'
              onTimeout: 'reject'


  - stage: DeployProd
    displayName: Create/Update Online Endpoint in Prod
    dependsOn: PROD_Approval
    variables:
      - name: branch
        value: $[ stageDependencies.DeployDev.DeployOnlineEndpointDev.outputs['getBranch.branch'] ]
      - group: vtpoc-vg
      - template: config-infra-prod.yml@vt-ml-templates
      - name: endpoint_name
        value: vt-online-$(namespace)$(postfix)$(environment)
    condition:  eq(variables.branch, 'main')
    jobs:
      - job: DeployOnlineEndpointProd
        steps:
          - checkout: none
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'code'
              targetPath: '$(Pipeline.Workspace)/s'
          - script: |
              echo "Contents of s dir:"
              cd $(Pipeline.Workspace)/s/mlops/pipelines
          - template: ../templates/connect-to-workspace.yml
            parameters:
              ado_service_connection_aml_ws: ${{ variables.ado_service_connection_aml_ws }}
              subscriptionId: ${{ variables.subscriptionId }}
              resource_group: ${{ variables.resource_group }}
              aml_workspace: ${{ variables.aml_workspace }}
          - template: ../templates/install-az-ext.yml
            parameters:
              ado_service_connection_aml_ws: ${{ variables.ado_service_connection_aml_ws }}
          - template: ../templates/install-requirements.yml
          - template: ../templates/register-environment.yml
            parameters:
              environment_name: vt-train-env
              environment_description: "Training and Deployment Environment for VT Pipeline"
              environment_path: data-science/environment/train-conda.yml
              build_type: conda
              ado_service_connection_aml_ws: ${{ variables.ado_service_connection_aml_ws }}
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: 'ls -la $(Pipeline.Workspace)/s'
          - template: ../templates/register_model.yml
            parameters:
              model_path: 'models/vt-model/vt-model'
              ado_service_connection_aml_ws: ${{ variables.ado_service_connection_aml_ws }}
          - template: ../templates/create-online-endpoint.yml
            parameters:
              endpoint_name: "${{ variables.endpoint_name }}"
              endpoint_description: "VT Online Endpoint"
              auth_mode: "key"
              ado_service_connection_aml_ws: ${{ variables.ado_service_connection_aml_ws }}
          - template: ../templates/create-online-deployment.yml
            parameters:
              deployment_name: vt-online-dp
              endpoint_name: "${{ variables.endpoint_name }}"
              model_path: "vt-model@latest"
              traffic_allocation: 100
              ado_service_connection_aml_ws: ${{ variables.ado_service_connection_aml_ws }}
          - template: ../templates/test-online-endpoint.yml
            parameters:
              endpoint_name: "${{ variables.endpoint_name }}"
              sample_request: data/test-request.json
              ado_service_connection_aml_ws: ${{ variables.ado_service_connection_aml_ws }}